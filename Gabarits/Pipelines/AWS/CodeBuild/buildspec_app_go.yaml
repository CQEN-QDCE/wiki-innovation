version: 0.2

env:
  variables:
    PACKAGE: "github.com/aws-samples/lambda-go-samples"
    GO_VERSION: 1.19

phases:

  install:
    commands:

      # AWS Codebuild Go images use /go for the $GOPATH so let's copy our 
      # application source code into that directory structure.
      - mkdir -p "/go/src/$(dirname ${PACKAGE})"
      - ln -s "${CODEBUILD_SRC_DIR}" "/go/src/${PACKAGE}" 
      
      # Print all environment variables (handy for AWS CodeBuild logs)
      - env

      # Install golint
      - go get -u golang.org/x/lint/golint

      # install govulncheck to scan code
      - echo install govulncheck
      - go install golang.org/x/vuln/cmd/govulncheck@latest    

  pre_build: 
    commands:

      # Make sure we're in the project directory within our GOPATH
      - cd "/go/src/${PACKAGE}"

      # Fetch all dependencies
      - go get -t ./...

      # Ensure code passes all lint tests
      - golint -set_exit_status

      # Check the Go code for common problems with 'go vet'
      - go vet .

      # Run all tests included with our application
      - go test .

      # Vulnerability detection using govulncheck
      - govulncheck -json ./... > lambda-go-samples-govulncheck-results.json

  build:
    commands:

      # Build our go application
      - go build -o main

artifacts:
  files:
    - lambda-go-samples-govulncheck-results.json